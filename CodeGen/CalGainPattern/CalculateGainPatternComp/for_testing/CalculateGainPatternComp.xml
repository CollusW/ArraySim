<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CalculateGainPatternComp</name>
    </assembly>
    <members>
        <member name="T:CalculateGainPatternComp.MatlabClass">
            <summary>
            The MatlabClass class provides a CLS compliant, MWArray interface to the MATLAB
            functions contained in the files:
            <newpara></newpara>
            E:\Work\Matlab\SandboxArraySimGit\CodeGen\CalGainPattern\CalcuGainPattern.m
            </summary>
            <remarks>
            @Version 4.0
            </remarks>
        </member>
        <member name="M:CalculateGainPatternComp.MatlabClass.#cctor">
            <summary internal= "true">
            The static constructor instantiates and initializes the MATLAB Runtime instance.
            </summary>
        </member>
        <member name="M:CalculateGainPatternComp.MatlabClass.#ctor">
            <summary>
            Constructs a new instance of the MatlabClass class.
            </summary>
        </member>
        <member name="M:CalculateGainPatternComp.MatlabClass.Finalize">
            <summary internal= "true">
            Class destructor called by the CLR garbage collector.
            </summary>
        </member>
        <member name="M:CalculateGainPatternComp.MatlabClass.Dispose">
            <summary>
            Frees the native resources associated with this object
            </summary>
        </member>
        <member name="M:CalculateGainPatternComp.MatlabClass.Dispose(System.Boolean)">
            <summary internal= "true">
            Internal dispose function
            </summary>
        </member>
        <member name="M:CalculateGainPatternComp.MatlabClass.CalcuGainPattern">
             <summary>
             Provides a single output, 0-input MWArrayinterface to the CalcuGainPattern MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             /*!
             *  @brief     This function calculates the array gain pattern (log scale).
             *  @details   
             *  @param[out] gainPatterLog. 360x1, array gain pattern (in log scale) for AZ
             angle [0:1:359] degree.
             *  @param[in] carrierFreq,  1x1, integer, carrier frequency. valid range =
             [5625:1:5825], unit is MHz.
             *  @param[in] weight,    4x1, complex double, weight. Note: weight should be
             conjugated before passing to the function. i.e. this function DOES NOT conjugate
             the input weight.
             *  @param[in] sector,  1x1, integer, sector number. valid range = [1:1:24].
             *  @pre       First initialize the system.
             *  @bug       Null
             *  @warning   Null
             *  @author    Collus Wang, Wayne Zhang
             *  @version   1.0
             *  @date       2018.01.15.
             *  @copyright Collus Wang all rights reserved.
             * @remark   { revision history: V1.0, 2018.01.15. Collus Wang, Wayne Zhang, 
             first draft }
             */
             </remarks>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:CalculateGainPatternComp.MatlabClass.CalcuGainPattern(MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 1-input MWArrayinterface to the CalcuGainPattern MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             /*!
             *  @brief     This function calculates the array gain pattern (log scale).
             *  @details   
             *  @param[out] gainPatterLog. 360x1, array gain pattern (in log scale) for AZ
             angle [0:1:359] degree.
             *  @param[in] carrierFreq,  1x1, integer, carrier frequency. valid range =
             [5625:1:5825], unit is MHz.
             *  @param[in] weight,    4x1, complex double, weight. Note: weight should be
             conjugated before passing to the function. i.e. this function DOES NOT conjugate
             the input weight.
             *  @param[in] sector,  1x1, integer, sector number. valid range = [1:1:24].
             *  @pre       First initialize the system.
             *  @bug       Null
             *  @warning   Null
             *  @author    Collus Wang, Wayne Zhang
             *  @version   1.0
             *  @date       2018.01.15.
             *  @copyright Collus Wang all rights reserved.
             * @remark   { revision history: V1.0, 2018.01.15. Collus Wang, Wayne Zhang, 
             first draft }
             */
             </remarks>
             <param name="carrierFreq">Input argument #1</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:CalculateGainPatternComp.MatlabClass.CalcuGainPattern(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 2-input MWArrayinterface to the CalcuGainPattern MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             /*!
             *  @brief     This function calculates the array gain pattern (log scale).
             *  @details   
             *  @param[out] gainPatterLog. 360x1, array gain pattern (in log scale) for AZ
             angle [0:1:359] degree.
             *  @param[in] carrierFreq,  1x1, integer, carrier frequency. valid range =
             [5625:1:5825], unit is MHz.
             *  @param[in] weight,    4x1, complex double, weight. Note: weight should be
             conjugated before passing to the function. i.e. this function DOES NOT conjugate
             the input weight.
             *  @param[in] sector,  1x1, integer, sector number. valid range = [1:1:24].
             *  @pre       First initialize the system.
             *  @bug       Null
             *  @warning   Null
             *  @author    Collus Wang, Wayne Zhang
             *  @version   1.0
             *  @date       2018.01.15.
             *  @copyright Collus Wang all rights reserved.
             * @remark   { revision history: V1.0, 2018.01.15. Collus Wang, Wayne Zhang, 
             first draft }
             */
             </remarks>
             <param name="carrierFreq">Input argument #1</param>
             <param name="weight">Input argument #2</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:CalculateGainPatternComp.MatlabClass.CalcuGainPattern(MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides a single output, 3-input MWArrayinterface to the CalcuGainPattern MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             /*!
             *  @brief     This function calculates the array gain pattern (log scale).
             *  @details   
             *  @param[out] gainPatterLog. 360x1, array gain pattern (in log scale) for AZ
             angle [0:1:359] degree.
             *  @param[in] carrierFreq,  1x1, integer, carrier frequency. valid range =
             [5625:1:5825], unit is MHz.
             *  @param[in] weight,    4x1, complex double, weight. Note: weight should be
             conjugated before passing to the function. i.e. this function DOES NOT conjugate
             the input weight.
             *  @param[in] sector,  1x1, integer, sector number. valid range = [1:1:24].
             *  @pre       First initialize the system.
             *  @bug       Null
             *  @warning   Null
             *  @author    Collus Wang, Wayne Zhang
             *  @version   1.0
             *  @date       2018.01.15.
             *  @copyright Collus Wang all rights reserved.
             * @remark   { revision history: V1.0, 2018.01.15. Collus Wang, Wayne Zhang, 
             first draft }
             */
             </remarks>
             <param name="carrierFreq">Input argument #1</param>
             <param name="weight">Input argument #2</param>
             <param name="sector">Input argument #3</param>
             <returns>An MWArray containing the first output argument.</returns>
            
        </member>
        <member name="M:CalculateGainPatternComp.MatlabClass.CalcuGainPattern(System.Int32)">
             <summary>
             Provides the standard 0-input MWArray interface to the CalcuGainPattern MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             /*!
             *  @brief     This function calculates the array gain pattern (log scale).
             *  @details   
             *  @param[out] gainPatterLog. 360x1, array gain pattern (in log scale) for AZ
             angle [0:1:359] degree.
             *  @param[in] carrierFreq,  1x1, integer, carrier frequency. valid range =
             [5625:1:5825], unit is MHz.
             *  @param[in] weight,    4x1, complex double, weight. Note: weight should be
             conjugated before passing to the function. i.e. this function DOES NOT conjugate
             the input weight.
             *  @param[in] sector,  1x1, integer, sector number. valid range = [1:1:24].
             *  @pre       First initialize the system.
             *  @bug       Null
             *  @warning   Null
             *  @author    Collus Wang, Wayne Zhang
             *  @version   1.0
             *  @date       2018.01.15.
             *  @copyright Collus Wang all rights reserved.
             * @remark   { revision history: V1.0, 2018.01.15. Collus Wang, Wayne Zhang, 
             first draft }
             */
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:CalculateGainPatternComp.MatlabClass.CalcuGainPattern(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 1-input MWArray interface to the CalcuGainPattern MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             /*!
             *  @brief     This function calculates the array gain pattern (log scale).
             *  @details   
             *  @param[out] gainPatterLog. 360x1, array gain pattern (in log scale) for AZ
             angle [0:1:359] degree.
             *  @param[in] carrierFreq,  1x1, integer, carrier frequency. valid range =
             [5625:1:5825], unit is MHz.
             *  @param[in] weight,    4x1, complex double, weight. Note: weight should be
             conjugated before passing to the function. i.e. this function DOES NOT conjugate
             the input weight.
             *  @param[in] sector,  1x1, integer, sector number. valid range = [1:1:24].
             *  @pre       First initialize the system.
             *  @bug       Null
             *  @warning   Null
             *  @author    Collus Wang, Wayne Zhang
             *  @version   1.0
             *  @date       2018.01.15.
             *  @copyright Collus Wang all rights reserved.
             * @remark   { revision history: V1.0, 2018.01.15. Collus Wang, Wayne Zhang, 
             first draft }
             */
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="carrierFreq">Input argument #1</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:CalculateGainPatternComp.MatlabClass.CalcuGainPattern(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 2-input MWArray interface to the CalcuGainPattern MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             /*!
             *  @brief     This function calculates the array gain pattern (log scale).
             *  @details   
             *  @param[out] gainPatterLog. 360x1, array gain pattern (in log scale) for AZ
             angle [0:1:359] degree.
             *  @param[in] carrierFreq,  1x1, integer, carrier frequency. valid range =
             [5625:1:5825], unit is MHz.
             *  @param[in] weight,    4x1, complex double, weight. Note: weight should be
             conjugated before passing to the function. i.e. this function DOES NOT conjugate
             the input weight.
             *  @param[in] sector,  1x1, integer, sector number. valid range = [1:1:24].
             *  @pre       First initialize the system.
             *  @bug       Null
             *  @warning   Null
             *  @author    Collus Wang, Wayne Zhang
             *  @version   1.0
             *  @date       2018.01.15.
             *  @copyright Collus Wang all rights reserved.
             * @remark   { revision history: V1.0, 2018.01.15. Collus Wang, Wayne Zhang, 
             first draft }
             */
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="carrierFreq">Input argument #1</param>
             <param name="weight">Input argument #2</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:CalculateGainPatternComp.MatlabClass.CalcuGainPattern(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray,MathWorks.MATLAB.NET.Arrays.MWArray)">
             <summary>
             Provides the standard 3-input MWArray interface to the CalcuGainPattern MATLAB
             function.
             </summary>
             <remarks>
             M-Documentation:
             /*!
             *  @brief     This function calculates the array gain pattern (log scale).
             *  @details   
             *  @param[out] gainPatterLog. 360x1, array gain pattern (in log scale) for AZ
             angle [0:1:359] degree.
             *  @param[in] carrierFreq,  1x1, integer, carrier frequency. valid range =
             [5625:1:5825], unit is MHz.
             *  @param[in] weight,    4x1, complex double, weight. Note: weight should be
             conjugated before passing to the function. i.e. this function DOES NOT conjugate
             the input weight.
             *  @param[in] sector,  1x1, integer, sector number. valid range = [1:1:24].
             *  @pre       First initialize the system.
             *  @bug       Null
             *  @warning   Null
             *  @author    Collus Wang, Wayne Zhang
             *  @version   1.0
             *  @date       2018.01.15.
             *  @copyright Collus Wang all rights reserved.
             * @remark   { revision history: V1.0, 2018.01.15. Collus Wang, Wayne Zhang, 
             first draft }
             */
             </remarks>
             <param name="numArgsOut">The number of output arguments to return.</param>
             <param name="carrierFreq">Input argument #1</param>
             <param name="weight">Input argument #2</param>
             <param name="sector">Input argument #3</param>
             <returns>An Array of length "numArgsOut" containing the output
             arguments.</returns>
            
        </member>
        <member name="M:CalculateGainPatternComp.MatlabClass.CalcuGainPattern(System.Int32,MathWorks.MATLAB.NET.Arrays.MWArray[]@,MathWorks.MATLAB.NET.Arrays.MWArray[])">
             <summary>
             Provides an interface for the CalcuGainPattern function in which the input and
             output
             arguments are specified as an array of MWArrays.
             </summary>
             <remarks>
             This method will allocate and return by reference the output argument
             array.<newpara></newpara>
             M-Documentation:
             /*!
             *  @brief     This function calculates the array gain pattern (log scale).
             *  @details   
             *  @param[out] gainPatterLog. 360x1, array gain pattern (in log scale) for AZ
             angle [0:1:359] degree.
             *  @param[in] carrierFreq,  1x1, integer, carrier frequency. valid range =
             [5625:1:5825], unit is MHz.
             *  @param[in] weight,    4x1, complex double, weight. Note: weight should be
             conjugated before passing to the function. i.e. this function DOES NOT conjugate
             the input weight.
             *  @param[in] sector,  1x1, integer, sector number. valid range = [1:1:24].
             *  @pre       First initialize the system.
             *  @bug       Null
             *  @warning   Null
             *  @author    Collus Wang, Wayne Zhang
             *  @version   1.0
             *  @date       2018.01.15.
             *  @copyright Collus Wang all rights reserved.
             * @remark   { revision history: V1.0, 2018.01.15. Collus Wang, Wayne Zhang, 
             first draft }
             */
             </remarks>
             <param name="numArgsOut">The number of output arguments to return</param>
             <param name= "argsOut">Array of MWArray output arguments</param>
             <param name= "argsIn">Array of MWArray input arguments</param>
            
        </member>
        <member name="M:CalculateGainPatternComp.MatlabClass.WaitForFiguresToDie">
             <summary>
             This method will cause a MATLAB figure window to behave as a modal dialog box.
             The method will not return until all the figure windows associated with this
             component have been closed.
             </summary>
             <remarks>
             An application should only call this method when required to keep the
             MATLAB figure window from disappearing.  Other techniques, such as calling
             Console.ReadLine() from the application should be considered where
             possible.</remarks>
            
        </member>
    </members>
</doc>
